package dk.fastaval.fastavappen.fragments;

import java.util.ArrayList;

import android.app.Activity;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.CheckedTextView;
import android.widget.TextView;
import android.widget.Toast;

import com.actionbarsherlock.app.SherlockListFragment;

import dk.fastaval.fastavappen.R;

public class ProgramFragment extends SherlockListFragment {

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);

	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.program_fragment, container,
				false);
		return view;
	}

	public CharSequence getTitle() {
		return getText(R.string.title_fastaval_program);
	}

	public class ProgramAdapter extends BaseExpandableListAdapter {

		public ArrayList<String> groupItem, tempChild;
		public ArrayList<Object> Childtem = new ArrayList<Object>();
		public LayoutInflater minflater;
		public Activity activity;

		public ProgramAdapter(ArrayList<String> grList,
				ArrayList<Object> childItem) {
			groupItem = grList;
			this.Childtem = childItem;
		}

		public void setInflater(LayoutInflater mInflater, Activity act) {
			this.minflater = mInflater;
			activity = act;
		}

		@Override
		public Object getChild(int arg0, int arg1) {
			return null;
		}

		@Override
		public long getChildId(int groupPosition, int childPosition) {
			return 0;
		}

		@Override
		public View getChildView(int groupPosition, final int childPosition,
				boolean isLastChild, View convertView, ViewGroup parent) {
			tempChild = (ArrayList<String>) Childtem.get(groupPosition);
			TextView text = null;
			if (convertView == null) {
				convertView = minflater.inflate(R.layout.childrow, null);
			}
			text = (TextView) convertView.findViewById(R.id.textView1);
			text.setText(tempChild.get(childPosition));
			convertView.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					Toast.makeText(activity, tempChild.get(childPosition),
							Toast.LENGTH_SHORT).show();
				}
			});
			return convertView;
		}

		@Override
		public int getChildrenCount(int groupPosition) {
			return ((ArrayList<String>) Childtem.get(groupPosition)).size();
		}

		@Override
		public Object getGroup(int groupPosition) {
			return null;
		}

		@Override
		public int getGroupCount() {
			return groupItem.size();
		}

		@Override
		public void onGroupCollapsed(int groupPosition) {
			super.onGroupCollapsed(groupPosition);
		}

		@Override
		public void onGroupExpanded(int groupPosition) {
			super.onGroupExpanded(groupPosition);
		}

		@Override
		public long getGroupId(int groupPosition) {
			return 0;
		}

		@Override
		public View getGroupView(int groupPosition, boolean isExpanded,
				View convertView, ViewGroup parent) {
			if (convertView == null) {
				convertView = minflater.inflate(R.layout.grouprow, null);
			}
			((CheckedTextView) convertView).setText(groupItem
					.get(groupPosition));
			((CheckedTextView) convertView).setChecked(isExpanded);
			return convertView;
		}

		@Override
		public boolean hasStableIds() {
			// TODO Auto-generated method stub
			return false;
		}

		@Override
		public boolean isChildSelectable(int groupPosition, int childPosition) {
			// TODO Auto-generated method stub
			return false;
		}

	}
}
